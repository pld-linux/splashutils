diff -Nur splashutils-1.1.9.10.orig/Makefile splashutils-1.1.9.10/Makefile
--- splashutils-1.1.9.10.orig/Makefile	2005-09-29 01:40:24.000000000 +0200
+++ splashutils-1.1.9.10/Makefile	2006-04-02 20:20:31.000000000 +0200
@@ -8,8 +8,6 @@
 #
 
 PKG_VERSION = 1.1.9.10
-DEBUG 	 = false		# set to true to prevent stripping
-K_SHARED = false		# set to true if you want to link to a shared klibc
 QUIET    = true
 
 CC	= gcc
@@ -17,7 +15,6 @@
 
 JPEGSRC	?= libs/jpeg-6b
 LPNGSRC ?= libs/libpng-1.2.8
-ZLIBSRC ?= libs/zlib-1.2.3
 FT2SRC  ?= libs/freetype-2.1.9
 
 prefix     =
@@ -30,26 +27,13 @@
 INSTALL_DATA 	= ${INSTALL} -m 644
 INSTALL_SCRIPT 	= ${INSTALL_PROG}
 
-ifeq ($(strip $(K_SHARED)),true)
-	K_LDFLAGS = -shared
-else 
-	K_LDFLAGS = -static
-endif
-
-ifeq ($(strip $(QUIET)),true)
-	Q = @
-	OUTPUT = /dev/null
-else
-	Q =
-	OUTPUT = /dev/stdout
-endif
+OUTPUT  = /dev/stdout
 
 ROOT	= $(shell pwd)
 
 # flags for the kernel utils
-K_CFLAGS = -w -ffunction-sections -fdata-sections $(MISCINCS) \
-	   -I$(ROOT)/$(ZLIBSRC) -I$(ROOT)/$(FT2SRC)/include -I$(ROOT)/linux/include -I$(ROOT)/linux/include2 \
-	   -DWITH_ERRLIST -DTARGET_KERNEL -DTT_CONFIG_OPTION_BYTECODE_INTERPRETER
+K_CFLAGS = -I$(FT2SRC)/include -I/usr/include -ffunction-sections \
+					 -fdata-sections -DTARGET_KERNEL -DTT_CONFIG_OPTION_BYTECODE_INTERPRETER
 
 PNGDEFS = -DPNG_NO_WRITE_TIME -DPNG_NO_FLOATING_POINT_SUPPORTED -DPNG_NO_WRITE_SUPPORTED -DPNG_NO_READ_iTXt \
 	  -DPNG_LEGACY_SUPPORTED -DPNG_NO_PROGRESSIVE_READ -DPNG_NO_MNG_FEATURES -DPNG_NO_CONSOLE_IO \
@@ -62,10 +46,9 @@
 K_DEPS   = 
 
 # flags for the user utils
-CFLAGS   = -Wall -g
 LDLIBS   = -ljpeg -lm
 LDFLAGS  = 
-INCLUDES = -I$(ROOT)/linux/include -I/usr/include/freetype2
+INCLUDES = -I/usr/linux/include -I/usr/include/freetype2
 OBJS     = splash.o parse.o render.o image.o cmd.o common.o daemon.o list.o effects.o
 
 # checks whether an opton is set in config.h
@@ -88,16 +71,12 @@
 endif
 
 ifeq ($(call config_opt,CONFIG_PNG),true)
-	K_LDLIBS += $(LPNGSRC)/libpng.a $(ZLIBSRC)/libz.a 
+	K_LDLIBS += $(LPNGSRC)/libpng.a -lz
 	K_DEPS	 += libpng
 	LDLIBS	 += -lpng -lz -lm
 endif	
 
-ifeq ($(strip $(DEBUG)),true)
-	STRIP = true
-else	
 	STRIP = strip --strip-all -R .comment -R .note
-endif
 
 KOUT	= kernel
 dotg    = \e[32;01m*\e[0m
@@ -120,38 +99,21 @@
 
 $(SP_UTIL): $(OBJS)
 	@$(call info,LD,$@)
-	$(Q)$(CC) $+ $(LDLIBS) -o $@
-	$(Q)$(CC) $+ $(LDLIBS) -static -o $@.static
-
-linux:
-	@if [ ! -e "$(ROOT)/linux" ]; then \
-		ln -s /lib/modules/`uname -r`/source/ "$(ROOT)/linux"; \
-	fi
+	$(CC) $+ $(LDLIBS) -o $@
+	$(CC) $+ $(LDLIBS) -static -o $@.static
 
 kdir:
 	@if [ ! -d "$(ROOT)/$(KOUT)" ]; then \
 		mkdir "$(ROOT)/$(KOUT)" ; \
 	fi
 
-zlib:	config.h
-	@cd $(ZLIBSRC) ; \
-	if [ ! -e ./Makefile ]; then \
-		$(call info,CONF,zlib) ; \
-		CC=$(KLCC) CFLAGS="$(K_CFLAGS)" \
-		./configure > $(OUTPUT); \
-		sed -i 's#^CFLAGS=\(.*\)#CFLAGS=\1 $(K_CFLAGS)#' Makefile ; \
-	fi ; \
-	if ! make -q CC=$(KLCC) libz.a; then $(call info,MAKE,zlib) ; fi ; \
-	make CC=$(KLCC) libz.a > $(OUTPUT)
-
-libpng:	zlib config.h
+libpng:	config.h
 	@cd $(LPNGSRC) ; \
 	if [ ! -e ./Makefile ]; then \
 		$(call info,CONF,libpng) ; \
 		cp scripts/makefile.linux Makefile > $(OUTPUT); \
 		sed -i -e '/^CFLAGS/ { N ; s#^CFLAGS=.*#CFLAGS=$(K_CFLAGS) $(PNGDEFS)# ; P ; D }' \
-		       -e 's#^ZLIBINC=.*#ZLIBINC=$(ZLIBSRC)#' \
-		       -e 's#^ZLIBLIB=.*#ZLIBLIB=$(ZLIBSRC)#' Makefile ; \
+		       Makefile; \
 	fi ; \
 	if ! make -q CC=$(KLCC) libpng.a; then $(call info,MAKE,libpng) ; fi ; \
 	make CC=$(KLCC) libpng.a > $(OUTPUT) 
@@ -180,29 +142,28 @@
 	if ! make -q CFLAGS="$(K_CFLAGS)" library; then $(call info,MAKE,freetype2) ; fi ; \
 	make CFLAGS="-c $(K_CFLAGS)" library > $(OUTPUT)
 	
-splash_kern: linux jpeglib kdir $(K_DEPS) $(SP_HELPER) config.h $(K_LDLIBS)
+splash_kern: jpeglib kdir $(K_DEPS) $(SP_HELPER) $(LIBC) config.h $(K_LDLIBS)
 
 $(SP_HELPER): $(K_OBJS)
 	@$(call info,LD,$@)
-	$(Q)$(KLCC) $(K_LDFLAGS) -o $@ $+ $(K_LDLIBS)
+	@$(CC) -static $(K_LDFLAGS) -o $@ $+ $(K_LDLIBS)
 	$(Q)$(STRIP) $@
 
 $(KOUT)/%.o: %.c config.h splash.h
 	@$(call info,CC,$@)
-	$(Q)$(KLCC) $(K_CFLAGS) -I/usr/include -c -o $@ $<
+	@$(CC) $(K_CFLAGS) -c -o $@ $<
 
 %.o: %.c config.h splash.h
 	@$(call info,CC,$@)
-	$(Q)$(CC) $(CFLAGS) $(INCLUDES) -DPKG_VERSION=\"$(PKG_VERSION)\" -c -o $@ $<
+	@$(CC) $(CFLAGS) $(INCLUDES) -DPKG_VERSION=\"$(PKG_VERSION)\" -c -o $@ $<
 
-clean:	clean_jpg clean_png clean_zlib clean_ft2 clean_splash
+clean: clean_jpg clean_png clean_ft2 clean_splash
 
 clean_splash:
 	@$(call info,CLEAN,splash)
 	$(Q)rm -f *.o
 	$(Q)rm -f kernel/*.o
 	$(Q)rm -f splash_helper splash_util splash_util.static
-	$(Q)rm -f linux
 
 clean_jpg:
 	@cd $(JPEGSRC) ; \
@@ -220,14 +181,6 @@
 		rm -f Makefile ; \
 	fi
 
-clean_zlib:
-	@cd $(ZLIBSRC) ; \
-	if [ -e Makefile ]; then \
-		$(call info,CLEAN,zlib) ; \
-		make clean > $(OUTPUT) ; \
-		rm -f Makefile ; \
-	fi
-
 clean_ft2:
 	@cd $(FT2SRC) ; \
 	if [ -e ./config.mk ]; then \
