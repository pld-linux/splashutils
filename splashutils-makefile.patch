--- Makefile.orig	2006-07-15 00:02:22.000000000 +0200
+++ Makefile	2006-12-06 20:26:52.088282014 +0100
@@ -18,11 +18,6 @@
 # These variables can be defined on the command-line when the user
 # builds splashutils against his own versions of the libraries.
 
-JPEGSRC	?= libs/jpeg-6b
-LPNGSRC ?= libs/libpng-1.2.8
-ZLIBSRC ?= libs/zlib-1.2.3
-FT2SRC  ?= libs/freetype-2.1.9
-
 prefix     =
 sbindir    = ${prefix}/sbin
 usrbindir  = ${prefix}/usr/bin
@@ -51,27 +46,21 @@
 
 # Flags for the kernel utilities
 K_CFLAGS = -w -ffunction-sections -fdata-sections $(MISCINCS) \
-		-I$(ROOT)/$(ZLIBSRC) -I$(ROOT)/$(FT2SRC)/include \
+		-I/usr/include -I/usr/include/freetype2 \
 		-DWITH_ERRLIST -DTARGET_KERNEL -DTT_CONFIG_OPTION_BYTECODE_INTERPRETER
 
-PNGDEFS = -DPNG_NO_WRITE_TIME -DPNG_NO_FLOATING_POINT_SUPPORTED -DPNG_NO_WRITE_SUPPORTED -DPNG_NO_READ_iTXt \
-		-DPNG_LEGACY_SUPPORTED -DPNG_NO_PROGRESSIVE_READ -DPNG_NO_MNG_FEATURES -DPNG_NO_CONSOLE_IO \
-		-DPNG_NO_ERROR_NUMBERS -DPNG_READ_GRAY_TO_RGB_SUPPORTED -DPNG_READ_16_TO_8_SUPPORTED \
-		-DPNG_READ_STRIP_ALPHA_SUPPORTED -DPNG_NO_INFO_IMAGE -DPNG_NO_READ_TRANSFORMS -DPNG_NO_READ_ANCILLARY_CHUNKS
-	  
-K_LDLIBS = $(OBJDIR)/jpeglib/libjpeg.a
+K_LDLIBS = -ljpeg
 K_OBJS 	 = $(KOUT)/kernel.o $(KOUT)/dev.o $(KOUT)/parse.o $(KOUT)/render.o $(KOUT)/image.o \
 		   $(KOUT)/cmd.o $(KOUT)/common.o $(KOUT)/list.o $(KOUT)/effects.o
 K_DEPS   = 
 
 # Flags for the user utilities
-CFLAGS   = -Wall -g
 LDLIBS   = -ljpeg -lm -pthread
 LDFLAGS  = 
 
 # Include the klibc header files so that we can compile against fb.h
 # from a kernel thee patched with fbsplash.
-INCLUDES = -I/usr/include/freetype2 -idirafter /usr/lib/klibc/include/linux
+INCLUDES = -I/usr/include/freetype2 -idirafter /usr/include/linux
 OBJS     = $(OBJDIR)/splash.o $(OBJDIR)/parse.o $(OBJDIR)/render.o $(OBJDIR)/image.o \
 		   $(OBJDIR)/cmd.o $(OBJDIR)/common.o $(OBJDIR)/daemon.o $(OBJDIR)/daemon_cmd.o \
 	       $(OBJDIR)/list.o $(OBJDIR)/effects.o
@@ -90,22 +79,16 @@
 endif
 
 ifeq ($(call config_opt,CONFIG_TTF_KERNEL),true)
-	K_LDLIBS += $(OBJDIR)/freetype2/.libs/libfreetype.a 
+	K_LDLIBS += -lfreetype
 	K_OBJS 	 += $(KOUT)/ttf.o
-	K_DEPS	 += ft2
 endif
 
 ifeq ($(call config_opt,CONFIG_PNG),true)
-	K_LDLIBS += $(LPNGSRC)/libpng.a $(ZLIBSRC)/libz.a 
-	K_DEPS	 += libpng
+	K_LDLIBS += -lpng -lz
 	LDLIBS	 += -lpng -lz -lm
 endif	
 
-ifeq ($(strip $(DEBUG)),true)
-	STRIP = true
-else	
 	STRIP = strip --strip-all -R .comment -R .note
-endif
 
 OBJDIR	= objs
 KOUT	= $(OBJDIR)/kernel
@@ -137,8 +120,8 @@
 
 $(OBJDIR)/$(SP_UTIL): $(OBJS)
 	@$(call infmsg,LD,$@)
-	$(Q)$(CC) $+ $(LDLIBS) -o $@
-	$(Q)$(CC) $+ $(LDLIBS) -static -o $@.static
+	$(Q)$(CC) $(INCLUDES) $+ $(LDLIBS) -o $@
+	$(Q)$(CC) $(INCLUDES) $+ $(LDLIBS) -static -o $@.static
 
 objdir:	
 	@if [ ! -d "$(OBJDIR)" ]; then \
@@ -148,71 +131,16 @@
 		mkdir "$(KOUT)" ; \
 	fi
 
-zlib:	config.h
-	@cd $(ZLIBSRC) ; \
-	if [ ! -e ./Makefile ]; then \
-		$(call infmsg,CONF,zlib) ; \
-		CC=$(KLCC) CFLAGS="$(K_CFLAGS)" \
-		./configure > $(OUTPUT); \
-		sed -i 's#^CFLAGS=\(.*\)#CFLAGS=\1 $(K_CFLAGS)#' Makefile ; \
-	fi ; \
-	if ! make -q CC=$(KLCC) libz.a; then $(call infmsg,MAKE,zlib) ; fi ; \
-	make CC=$(KLCC) libz.a > $(OUTPUT)
-
-libpng:	zlib config.h
-	@cd $(LPNGSRC) ; \
-	if [ ! -e ./Makefile ]; then \
-		$(call infmsg,CONF,libpng) ; \
-		cp scripts/makefile.linux Makefile > $(OUTPUT); \
-		sed -i -e '/^CFLAGS/ { N ; s#^CFLAGS=.*#CFLAGS=$(K_CFLAGS) $(PNGDEFS)# ; P ; D }' \
-		       -e 's#^ZLIBINC=.*#ZLIBINC=$(ZLIBSRC)#' \
-		       -e 's#^ZLIBLIB=.*#ZLIBLIB=$(ZLIBSRC)#' Makefile ; \
-	fi ; \
-	if ! make -q CC=$(KLCC) libpng.a; then $(call infmsg,MAKE,libpng) ; fi ; \
-	make CC=$(KLCC) libpng.a > $(OUTPUT) 
-
-jpeglib:
-	@cd $(OBJDIR) ; \
-	if [ ! -d jpeglib ] ; then \
-		mkdir jpeglib ; \
-	fi ; \
-	cd jpeglib ; \
-	if [ ! -e ./Makefile ]; then \
-		$(call infmsg,CONF,libjpeg) ; \
-		CC=$(KLCC) CFLAGS="$(K_CFLAGS) -I$(ROOT)/$(OBJDIR)/jpeglib" \
-		$(ROOT)/$(JPEGSRC)/configure > $(OUTPUT) ; \
-		echo "#define NO_GETENV 1" >> jconfig.h ; \
-		sed -i "s#CFLAGS=.*#CFLAGS=$(K_CFLAGS) -I$(ROOT)/$(OBJDIR)/jpeglib#" Makefile ; \
-		sed -i "s:#define JMESSAGE.*::" jerror.c ; \
-	fi ; \
-	if ! make -q CC=$(KLCC) libjpeg.a; then $(call infmsg,MAKE,libjpeg) ; fi ; \
-	make CC=$(KLCC) libjpeg.a > $(OUTPUT)
-
-ft2:	config.h
-	@cd $(OBJDIR) ; \
-	if [ ! -d freetype2 ] ; then \
-		mkdir freetype2 ; \
-	fi ; \
-	cd freetype2 ; \
-	if [ ! -e ./config.mk ]; then \
-		$(call infmsg,CONF,freetype2) ; \
-		CC=$(KLCC) CPPFLAGS="-I$(ROOT)/$(ZLIBSRC)" \
-		CFLAGS="$(K_CFLAGS) -include $(ROOT)/klibc_compat.h" \
-		$(ROOT)/$(FT2SRC)/configure --disable-shared > $(OUTPUT) ; \
-	fi ; \
-	if ! make -q CFLAGS="$(K_CFLAGS)" library; then $(call infmsg,MAKE,freetype2) ; fi ; \
-	make CFLAGS="-c $(K_CFLAGS)" library > $(OUTPUT)
-	
-splash_kern: jpeglib $(K_DEPS) $(OBJDIR)/$(SP_HELPER) config.h $(K_LDLIBS)
+splash_kern: $(K_DEPS) $(OBJDIR)/$(SP_HELPER) config.h $(K_LDLIBS)
 
 $(OBJDIR)/$(SP_HELPER): $(K_OBJS)
 	@$(call infmsg,LD,$@)
-	$(Q)$(KLCC) $(K_LDFLAGS) -o $@ $+ $(K_LDLIBS)
+	$(Q)$(CC) -I/usr/include -I/usr/include/freetype2 $(K_LDFLAGS) -o $@ $+ $(K_LDLIBS) -lm
 	$(Q)$(STRIP) $@
 
 $(KOUT)/%.o: %.c config.h splash.h
 	@$(call infmsg,CC,$@)
-	$(Q)$(KLCC) $(K_CFLAGS) -c -o $@ $<
+	$(Q)$(CC) $(K_CFLAGS) -c -o $@ $<
 
 $(OBJDIR)/%.o: %.c config.h splash.h daemon.h
 	@$(call infmsg,CC,$@)
@@ -220,7 +148,7 @@
 
 clean:	clean_all
 
-clean_all:	clean_zlib clean_png
+clean_all:
 	@$(call infmsg,CLEAN,all)
 	$(Q)rm -rf $(OBJDIR)/*
 
@@ -231,44 +159,6 @@
 	$(Q)rm -f $(OBJDIR)/splash_helper splash_util splash_util.static 
 	$(Q)rm -r config.h
 
-clean_jpg:
-	$(Q)cd $(OBJDIR) ; \
-	if [ -e jpeglib ]; then \
-		cd jpeglib ; \
-	fi ; \
-	if [ -e Makefile ]; then \
-		$(call infmsg,CLEAN,libjpeg) ; \
-		make clean > $(OUTPUT) ; \
-		rm -f Makefile ; \
-	fi
-
-clean_png:
-	$(Q)cd $(LPNGSRC) ; \
-	if [ -e Makefile ]; then \
-		$(call infmsg,CLEAN,libpng) ; \
-		make clean > $(OUTPUT) ; \
-		rm -f Makefile ; \
-	fi
-
-clean_zlib:
-	$(Q)cd $(ZLIBSRC) ; \
-	if [ -e Makefile ]; then \
-		$(call infmsg,CLEAN,zlib) ; \
-		make clean > $(OUTPUT) ; \
-		rm -f Makefile ; \
-	fi
-
-clean_ft2:
-	$(Q)cd $(OBJDIR) ; \
-	if [ -e freetype2 ]; then \
-		cd freetype2 ; \
-	fi ; \
-	if [ -e ./config.mk ]; then \
-		$(call infmsg,CLEAN,freetype2) ; \
-		make clean > $(OUTPUT) ; \
-		rm -f config.mk ; \
-	fi
-
 install: all
 	@$(call infmsg,INSTALL,$(SP_HELPER))
 	$(Q)$(INSTALL_PROG) -D $(OBJDIR)/$(SP_HELPER) $(DESTDIR)$(sbindir)/$(SP_HELPER)
